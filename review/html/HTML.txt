HTML内容：

1.html 就是语言的超文本标记语言，是最基础的网页语言
2.html 是通过标签来定义的语言，代码都是有标签所组成
3.html 代码不区分大小写
4.html 代码有<html>开始</html>结束，里面又头部分<head></head>和体部分<body></body>两部分组成
5.头部分是给Html页面增加一些辅助或者属性信息，它里面的内容是会先加载
6.体部分是真正存放页面数据的地方

。多数标签都是有开始标签和结束标签，其中有个别标签因为只有单一功能，或者没有要修饰的内容可以在标签内结束
。想要对被标签修饰的内容进行更丰富的操作，就用到了标签中的属性，通过对属性值的改变，增加了更多的效果选择
。属性与属性值之间用“=”连接，属性值可以用双引号或者单引号或者不用引号，一般都会用双引号，或者公司规定书写规范
 格式：<标签 属性名=‘属性值’>数据内容 </标签名>
       <标签名 属性名=‘属性值' />

<html>
      <head>
          这是一个网页的标题
       </head>
       <body>
         这是<font color="red" size="8">我的</font>网页的内容  <br/>  <!--换行-->
         <hr/>  <!--水平线-->
        第二行
       </body>
</html>

&; 为转义字符  &lt;为<   &gt;为>
<h1> 一级标题</h1>
<h2> 二级标题</h2>
<h3>三级标题</h3>
   ...
 <h6>六级标题</h6>

操作思想：
  为了操作数据，都需要对数据进行不用标签的封装，通过标签中的属性对封装的数据进行操作。标签就相当于一个容器，对容器中的数据进行操作，就是在不断的改变容器中的属性值



1....列表标签：

<!--HTML注释语句-->
列表标签：dl
上层项目：dt
下层项目：dd  封装内容是会被缩进的，有自动缩进效果

<dl>
    <dt> 上层项目内容</dt>
    <dd> 下层项目内容</dd>
    <dd> 下层项目内容</dd>
    <dd> 下层项目内容</dd>
</dl>
<hr/>

 有序和无序的项目列表
 有序：<ol>
 无序：<ul>
 无论有序还是无序。条目的封装都是用的<li>
 而且他们都有缩进效果

<ul type="square">
      <li>无序项目列表</li>
      <li>无序项目列表</li>
      <li>无序项目列表</li>
      <li>无序项目列表</li>
</ul>

<ol type="a">
      <li>有序的项目列表</li>
      <li>有序的项目列表</li>
      <li>有序的项目列表</li>
      <li>有序的项目列表</li>
</ol>


2.......图像标签
<img>
例：<img src="e:\\xsxx_xsgl.jpg" align="middle" border="3" alt="图片说明文字" />
    align: 属性定义图片的排列方式。border：用来设置图像的边框 src：连接一个文件  width="500" height="200" 

图像地图：<map>
  应用：要在图像中选取某一部分作为连接的时候，如：中国地图每个省所对应的区域。需要使用坐标
 map标签要和img标签联合使用，Href是超链接
 <img src="sunset.jpg" alt="图片说明文字" usemap="#Map" />
  <map>
     <area shape="rect" coords="50,59,116,104" href="1.html" />
     <area shape="circle" coords="114,203,40" href="2.html" />
 </map>


3..表格标签
组成：标题标签：<caption> 给表格提供标题
     表头标签：<th> 一般对表格的第一行或者第一列进行格式化，就是粗体显示，并不常用
      行标签：<tr>  
       单元格标签：<td> 加载行标签的里面，可以简单理解为，先有行，在行中加入单元格
 格式：
 <table border="1" width="40%"> <!--width值为百分比可以让表格的宽度随浏览器的窗口的大小变化-->


 样式1：
<table>
<table border=1 bordercolor="#0000ee"  cellpadding=10 cellspacing=0 width=500>  <!--边界，边界颜色，内部字到单元格的距离，单元格间的距离-->
<caption>表格标题</caption>
 <tr>   <!--单元格一行-->
   <th>姓名</th><!--单元格  加粗居中-->
   <th>年龄</th>
</tr>
<tr> <!--单元格第二行-->
    <td>张三</td> <!--单元格  不加粗不居中-->
    <td> 39</td>
</tr>
</table>

========
样式2：
<table>
<table border=1 bordercolor="#0000ee" cellpadding=10 cellspacing=0 width=500>
<tbody><!--表格的下一级标签是tbody，不定义也是存在的，默认的-->
<caption>表格标题</caption>
<tr>
   <th colspan=2>个人信息</th> <!--colspan=2表示占2列-->
</tr>
<tr>
    <td> 张三</td>
    <td> 30 </td>
</tr>
</tbody>
</table>
=======
样式3：
<table border=1 bordercolor="#0000ee" cellpadding=10 cellspacing=0 width=300>
<caption>表格标题</caption>
<tr>
  <th rowspan=2>个人信息</th> <!--rowspan=2表示占2行-->
  <td> 30</td>

</tr>
 <tr> 
     <td>张三</td>
</tr>
</table>


4......超链接

超链接：作用：链接资源
当有了href属性才有了点击效果
href属性的值的不同，解析的方式不一样

如果在该值中没有指定任何协议
解析时，是按照默的协议来解析该值的，默认协议是file协议

<a href="http:\\www.sina.com.cn" target="_blank">新浪网站</a>
  <!--target="_blank"表示新建一个网页打开-->
<hr/>
<a href="e:\\xsxx_xsgl.jpg">图片</a>
<hr/>
<a href="mialto:abs@sina.com">联系我们</a><!--这是邮箱地址-->
<hr/>

<a href="http:\\www.xunlei.com/movies/fozlm.rmvb">复仇者联盟</a><br/>
<!--这是用什么浏览器都可以下载的网址-->
<a href="thunder://dferersfdfdr==">复仇者联盟</a>
<!--这是只能用迅雷下载的网址，首先由迅雷解析，再用迅雷读取后面的数据-->
<hr/>
<a href="javascript:void(0)" onclick="alert('我弹')">这是一个超链接</a>
<!--取消超链接的默认点击效果，自定义超链接的效果->

超链接： 
  定位标记：
  专业术语：锚
<a name=top>顶部位置</a>
<hr/>
<img src="111.jpg" height=900 width=400 border=10/>
<hr/>
<a name=center>中间位置</a>
<hr/>

<img src="111.jpg" height=900 width=400 border=10/>
<a href="#top">回到顶部位置</a>
<a href="#center>"回到中间位置</a>


5..框架 （现在不怎么常用）
<html>
<head>
</head>
<frameset rows="30%,*"><!--上面占30%，下面全部-->
   <frame src="top.html" name="top"/>
  <frameset cols="30%,*" /> <!--左边占30%，右边全部-->
    <frame src="left.html" name="left" />
    <frmae src="right.html" name="right" />
  </frameset>
</framtset>

<body>
</body>
</html>


<html>
<head>
</head>
<body>
    <h1>这是我的网站logo</h1>
</body>
</html>

<html>
<head>
</head>
<body>
    <h2>左边链接</h2>
    <a href="../img.html" target="right"> 链接一</a>
    <a href="../table.html" target="right"> 链接二</a>
    <a href="../link.html" target="right"> 链接三</a>
</body>
</html>


<html>
<head>
</head>
<body>
    <h3>内容显示区域</h3>
</body>
</html>


6...画中画标签
 <html>
<head>
</head>
<body>
 <iframe src="http://www.xxx.com/1.js" height=0 width=0>这是画中画标签，如果看到该文字，说明浏览器不支持该标签</iframe>
<!--很多恶意网站就是利用这种形式来传播的，高为0，宽为0，就可以在标签中隐蔽运行-->
</body>
</html>


7...表单组件    （经常使用）
<!--如果要给服务器端提供数据，表单中的组件必须要有name和value属性
    用于给服务端获取数据方便-->
  ---------- input=--------
<form>
   输入名称： <input type="text" name="user" value=""/> <br/>
   输入密码： <input type="password" name="paw" /> <br/> <!--是隐式密码-->
   选择性别： <input type="radio" name="sex" value="nan" /> 男
              <input type="radio" name="sex" value="nv" checked="checked" /> 女 <br/>
   <!--这是单选，只有两个name属性值相同时，也就是他们两个在用一个组合里面，这时才能只能选择一个，checked="checked"这个表示默认，在哪个里面就表示默认选择是哪个-->
  
    选择技术： <input type="checkbox" name="tech" value="java"/> JAVA
              <input type="checkbox" name="tech" value="html"/> HTML
              <input type="checkbox" name="tech" value="css"/> CSS <br/>
     <!--这是复选框，表示可以选择多个-->
    选择文件：  <input type="file" name="file"/> <br/>
    一个图片： <input type="image" src="11.jpg"/> <br/><!--点击图片具有提交数据的功能-->
    <!--这个功能很好用，在制作网页开发的时候，使用一张图片，就可以提交数据，不用使用按钮，造成网页的不美观-->
    隐藏组件： <input type="hidden" name="myke" value="myvalue" /><br/>
<!--这是一个隐藏的组件，数据不需要客户端知道，但是可以将其提交个服务端-->
    一个按钮：<input type="button" value="有个按钮" onclick="alert('按钮触动')"/> <br/>
     <!--自定义按钮事件-->

     <input type="reset" value="清除所有数据"/>
     <input type="submit" value="提交数据"/> <br/>
-------------------------------------------------

  <!--下拉菜单，选择-->
 <select name="country">
         <option value="none">--选择国家--</option>
         <option value="usa">美国</option>
         <option value="en">英国</option>
         <option value="cn" selected="selected">中国</option><br/>
        <!--selected="selected"表示默认为这个-->
 
</select>

<!--这是建立文本区域-->
<textarea name="text"></textarea>
 <br/>
 
</form>


8....表单格式化

<form>
   <table border="1" bordercolor="#0000ff" cellpadding=10 cellspacing=0 width=600>
       <tr>
          <th colspan="2">注册表单</th>
       </tr>
       <tr>
          <td> 用户名称：</td>
          <td><input type="text" name="user" /></td>
       </tr>
       <tr>
           <td>输入密码：</td>
           <td><input type="password" name="psw"/></td>
       </tr>
        <tr>
           <td>确认密码：</td>
           <td><input type="password" name="repsw"/></td>
       </tr>
       <tr>
            <td>选择性别: </td>
            <td><input type="radio" name="sex" value="nan"/>男
                <input type="radio" name="sex" value="nv"/>女
            </td>
       </tr>
        <tr>
             <td> 选择技术：</td>
             <td> 
               <input type="checkbox" name="tech" value="java"/>JAVA
               <input type="checkbox" name="tech" value="html"/>HTML
               <input type="checkbox" name="tech" value="css"/>CSS
              </td>
        </tr>
        <tr>
            <td>选择国家：</td>
            <td>
              <select name="country">
                <option value="none">--选择国家--</option>
                <option value="usa"> 美国</option>
                 <option value="en"> 英国</option>
                <option value="cn">中国 </option>
              </select>
             </td>
        </tr>
        <tr>
	   <th colspan="2">
 	      <input type="reset" value="清除数据"/>
              <input type="submit" value="提交数据"/>

	   </th>
	
        </tr>
   </table>
</form>


9...get和post提交

get和post都是将数据提交到指定位置，包括网络，或者自己编写的服务器中。
<form action="http://www.baidu.com" method="get">
<form action="http://192.168.1.1:9090" method="post">

建立一个服务器：然后提交到该服务器上
public class Test{
  public static void main(String[] args){
        ServerSocket ss=new ServerSocket(9090);
	Socket s=ss.accept();
        System.out.println(ss.getInetAddress().getHostAddress());
	InputStream in=s.getInputStream();
	byte[] buf=new byte[1024];
 	int len=in.read(buf);
  	System.out.println(new String(buf,0,len));
	PrintWriter out=new PrintWriter(s.getOutputStream(),true);
	out.println("<font clor='green' size='7'>注册成功</font>");
	s.close();
 	ss.close();
        
  }
}
*********************************************很重要******
 get提交和post提交的区别：

1.Get提交，提交的信息都是显示在地址栏中，
  POST提交，提交的信息不显示在地址栏中。
2、GET提交，对于敏感的数据信息不安全，
  POST提交，对于敏感信息安全。
3、GET提交，对于大数据不行，因为地址栏存储体积有限，
   POST提交，可以提交大体积数据
4、GET提交，将信息封装到了请求消息的请求行中，
   POST提交，将信息封装到了请求体中。

在服务端的一个区别：
  如果出现将中文提交到tomcat服务器，服务器默认会用iso8859-1进行解析会出现乱码，通过iso8859-1进行编码，再用指定的中文码表进行解析，即可
 这种方式对GET提交和Post提交都有效
 

  但是对于POST提交方式提交的中文，还有另一种解决方法，就是直接使用服务端一个对象request对象的setCharacterEncoding方法直接设置指定的中文码表就可以将中文数据解析出来，这种方法只对于请求体中的数据进行解码

综上所述：表单提交，建议使用POST


和服务端交互的三种方式：

1、地址栏中输入URL地址：get
2、超链接： get
3、表单： get和post
******************************************************

如果在客户端进行增强型的校验（只要有一个组件内容是错误的，是无法继续提交的，只有全对才可以提交），问：  
服务端对数据嗨还要进行校验吗？
  需要，为了安全。
如果服务端做了增强型的校验，客户端还需要进行校验吗？
   需要，因为要提高用户的上网体验效果，减轻服务端的压力


10、头标签 
头标签放在 <head></head>头部分之间，包括：title  base  meta  link

<title> 指定浏览器的标题栏显示的内容

<base>   
    herf 属性：指定网页中所有的超链接的目录，可以是本地目录，也可以是网络目录
 	 target属性：指定打开超链接的方式，如：_blank表示所有的超链接都使用新的窗口打开显示

<meta> 
   name属性：网页的描述信息，当取keywords时，content属性的内容就作为搜索引擎的关键字进行搜索
   http-equiv属性：模拟HTTP协议的响应消息头
  例： 
  <meta http-equiv="refresh" content="3" ;url="http://www.baidu.com.cn"/>  表示刷新打开页面3秒后跳转到百度页面

<link> 
   rel属性：描述目标文档与当前文档的关系
   type属性：文档类型
   media：指定目标文档在哪种设备上起作用
例： <link  rel="stylesheet" type="text/css" media="screen,print"
  href="a.css"/>

11、其他的标签
 <b>这是</b><i>演示</i><u>其他</u>常见的小标签 
<!--<b>是加粗 <i>是斜体 <u>是下划线-->
  X<sub>2</sub>X<sup>2</sup>
<!--<sub>是下标 <sup>是上标-->
 
<marquee> 让内容动起来
     direction 属性： left right down up
     behavior 属性： alternate scroll  slide
  <marquee direction="down" behavior="alternate">嘿，原来我会飞</marquee>
  <marquee direction="down" behavior="scroll">嘿，原来我会飞</marquee>
  <marquee direction="down" behavior="slide">嘿，原来我会飞</marquee>

<pre>  可以将文本的内容按照代码区的样子显示在页面上
例：
  <pre>
  public class Test(){
       public static void main(String[] args){
           System.out.println("hello word");
        }
  }
</pre>



12、XHTML   XML

 XHTML 是可扩展的超文本标记语言 ，语言更为严谨，相当于增强型的HTML，是基于XML的一种应用。

XML 是可扩展的标记语言
  HTML标签名是固定的，而XML标签名是可以自定义的
  XML是对数据信息的描述，是数据的关系，很吊，HTML是对数据显示的描述，即为数据的属性啊，表格啊
  XML代码规定的更为严格，如：标签不结束被视为错误
  XML规范可以被更多的应用程序所解释，将成为一种通用的数据交换语言
  各个服务器，框架都将XML作为配置文件
  

13、、
<!--没有特殊含义，只是为了封装数据用的-->
<div>这是一个div区域1</div>
<div>这是一个div区域2</div> <!--自动换行-->

<span>这是span区域1</span>
<span>这是span区域2</span><!--不会自动换行-->

<p>这是一个段落1</p>
<p>这是一个段落2</p><!--会自动换行，并且前面空一行-->

<!---
 标签分为两大类：
  1、块级标签（元素）：标签结束后都有换行。div p dl table title ol ul
  2、行类标签（元素）：标签结束后没有换行. font span img input select a
 ->
